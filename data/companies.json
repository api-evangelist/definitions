[
	{
		"id": "18737",
		"name": "API Blueprint",
		"summary": "API Blueprint is a documentation-oriented API description language. A couple of semantic assumptions over the plain Markdown. API Blueprint is perfect for designing your Web API and its comprehensive documentation but also for quick prototyping and collaboration. It is easy to learn and even easier to read u2013 after all it is just a form of plain text.",
		"details": "API Blueprint is a documentation-oriented API description language. A couple of semantic assumptions over the plain Markdown. API Blueprint is perfect for designing your Web API and its comprehensive documentation but also for quick prototyping and collaboration. It is easy to learn and even easier to read u2013 after all it is just a form of plain text.",
		"website": "https://apiblueprint.org/",
		"twitter": "https://twitter.com/apiblueprint",
		"github": "https://github.com/apiaryio/api-blueprint",
		"blog": "",
		"blogrss": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/apiblueprint-logo-2.png",
		"logo_width": "150",
		"screenshot": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/apiblueprint-logo-2.png",
		"tags": null
	},
	{
		"id": "137",
		"name": "Google",
		"summary": "You can use the Google API Discovery Service to build client libraries, IDE plugins, and other tools that interact with Google APIs. It provides a lightweight, JSON-based API that exposes machine-readable metadata about Google APIs, but could also be used to describe other APIs.",
		"details": "You can use the Google API Discovery Service to build client libraries, IDE plugins, and other tools that interact with Google APIs. It provides a lightweight, JSON-based API that exposes machine-readable metadata about Google APIs, but could also be used to describe other APIs.",
		"website": "https://developers.google.com/discovery/",
		"twitter": "",
		"github": "https://github.com/google",
		"blog": "",
		"blogrss": "http://feeds.feedburner.com/GoogleAdsDeveloperBlog",
		"logo": "http://deployment.googleapps.com/_/rsrc/1326052805286/Home/user-resources/google-icons-and-logos/google_logo_3D_online_medium.png",
		"logo_width": "150",
		"screenshot": "http://deployment.googleapps.com/_/rsrc/1326052805286/Home/user-resources/google-icons-and-logos/google_logo_3D_online_medium.png",
		"tags": null
	},
	{
		"id": "1",
		"name": "Mashery",
		"summary": "You want to make it fast and easy for developers to start building with your API. Mashery I/O Docs let you achieve that with a clean, powerful interface for executing live API calls right from your API documentation. With Mashery I/O Docs, your developers spend less time toggling, cutting, and pasting and more time coding great apps.",
		"details": "You want to make it fast and easy for developers to start building with your API. Mashery I/O Docs let you achieve that with a clean, powerful interface for executing live API calls right from your API documentation. With Mashery I/O Docs, your developers spend less time toggling, cutting, and pasting and more time coding great apps.",
		"website": "http://www.mashery.com/product/io-docs",
		"twitter": "https://twitter.com/Mashery",
		"github": "https://github.com/mashery",
		"blog": "http://www.mashery.com/blog",
		"blogrss": "http://feeds.feedburner.com/MasheryBlog",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/serviceproviders/mashery-logo.png",
		"logo_width": "200",
		"screenshot": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/serviceproviders/mashery-logo.png",
		"tags": null
	},
	{
		"id": "1917",
		"name": "RAML",
		"summary": "RESTful API Modeling Language (RAML) is a simple and succinct way of describing practically-RESTful APIs. It encourages reuse, enables discovery and pattern-sharing, and aims for merit-based emergence of best practices. The goal is to help our current API ecosystem by solving immediate problems and then encourage ever-better API patterns. RAML is built on broadly-used standards such as YAML and JS",
		"details": "RESTful API Modeling Language (RAML) is a simple and succinct way of describing practically-RESTful APIs. It encourages reuse, enables discovery and pattern-sharing, and aims for merit-based emergence of best practices. The goal is to help our current API ecosystem by solving immediate problems and then encourage ever-better API patterns. RAML is built on broadly-used standards such as YAML and JSON and is a non-proprietary, vendor-neutral open spec.",
		"website": "http://raml.org/",
		"twitter": "",
		"github": "",
		"blog": "http://open-raml.blogspot.com/",
		"blogrss": "http://open-raml.blogspot.com/feeds/posts/default?alt=rss",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/raml-logo.jpg",
		"logo_width": "150",
		"screenshot": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/raml-logo.jpg",
		"tags": null
	},
	{
		"id": "18860",
		"name": "Schema.org",
		"summary": "Schema.org is a collaborative, community activity with a mission to create, maintain, and promote schemas for structured data on the Internet, on web pages, in email messages, and beyond. Schema.org vocabulary can be used with many different encodings, including RDFa, Microdata and JSON-LD. n",
		"details": "Schema.org is a collaborative, community activity with a mission to create, maintain, and promote schemas for structured data on the Internet, on web pages, in email messages, and beyond. Schema.org vocabulary can be used with many different encodings, including RDFa, Microdata and JSON-LD. n",
		"website": "http://schema.org",
		"twitter": "",
		"github": "",
		"blog": "http://blog.schema.org/",
		"blogrss": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/schema-org-logo.jpeg",
		"logo_width": "150",
		"screenshot": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/schema-org-logo.jpeg",
		"tags": null
	},
	{
		"id": "1684",
		"name": "Swagger",
		"summary": "Swagger is a machine readable API definition format that has built a number of tools around the specification, including an open source API design editor that allows you to design, import, and export APIs in JSON and YAML, then also generate server, and client side code, as well as interactive documentation.",
		"details": "Swagger is a machine readable API definition format that has built a number of tools around the specification, including an open source API design editor that allows you to design, import, and export APIs in JSON and YAML, then also generate server, and client side code, as well as interactive documentation.",
		"website": "http://swagger.io",
		"twitter": "https://twitter.com/SwaggerApi",
		"github": "https://github.com/swagger-api",
		"blog": "http://swagger.io/blog/",
		"blogrss": "",
		"logo": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/swagger-logo-bw.png",
		"logo_width": "225",
		"screenshot": "http://kinlane-productions.s3.amazonaws.com/api-evangelist-site/company/logos/swagger-logo-bw.png",
		"tags": null
	}
]